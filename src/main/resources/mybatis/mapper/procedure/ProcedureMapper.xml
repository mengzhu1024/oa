<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oa.procedure.mapper.ProcedureMapper">
    <resultMap id="BaseResultMap" type="com.oa.procedure.entity.Procedure">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="form_id" jdbcType="VARCHAR" property="formId"/>
        <result column="type_id" jdbcType="VARCHAR" property="typeId"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
    </resultMap>
    <sql id="BaseColumns">
        `id`, `name`, `content`, `form_id`, `type_id`, `gmt_create`, `gmt_modified`
    </sql>
    <insert id="insert" parameterType="com.oa.procedure.entity.Procedure">
        insert into procedure values(#{id,jdbcType=VARCHAR},
        #{name, jdbcType=VARCHAR},
        #{content, jdbcType=VARCHAR},
        #{formId, jdbcType=VARCHAR},
        #{typeId, jdbcType=VARCHAR},
        now(),
        now())
    </insert>
    <insert id="insertSelective" parameterType="com.oa.procedure.entity.Procedure">
        insert into procedure
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">`id`,</if>
            <if test="name != null">`name`,</if>
            <if test="content != null">`content`,</if>
            <if test="formId != null">`form_id`,</if>
            <if test="typeId != null">`type_id`,</if>
            `gmt_create`,
            `gmt_modified`
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id, jdbcType=VARCHAR},</if>
            <if test="name != null">#{name, jdbcType=VARCHAR},</if>
            <if test="content != null">#{content, jdbcType=VARCHAR},</if>
            <if test="formId != null">#{formId, jdbcType=VARCHAR},</if>
            <if test="typeId != null">#{typeId, jdbcType=VARCHAR},</if>
            now(),
            now()
        </trim>
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.oa.procedure.entity.Procedure">
        update procedure
        <set>
            `name` = #{name, jdbcType=VARCHAR},
            `content` = #{content, jdbcType=VARCHAR},
            `form_id` = #{formId, jdbcType=VARCHAR},
            `type_id` = #{typeId, jdbcType=VARCHAR},
            `gmt_modified` = now()
        </set>
        where `id` = #{id, jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.oa.procedure.entity.Procedure">
        update procedure
        <set>
            <if test="name != null">`name` = #{name, jdbcType=VARCHAR},</if>
            <if test="content != null">`content` = #{content, jdbcType=VARCHAR},</if>
            <if test="formId != null">`form_id` = #{formId, jdbcType=VARCHAR},</if>
            <if test="typeId != null">`type_id` = #{typeId, jdbcType=VARCHAR},</if>
            `gmt_modified` = now()
        </set>
        where `id` = #{id, jdbcType=VARCHAR}
    </update>
    <update id="updateByCriteria">
        update procedure
        <set>
            `name` = #{t.name, jdbcType=VARCHAR},
            `content` = #{t.content, jdbcType=VARCHAR},
            `form_id` = #{t.formId, jdbcType=VARCHAR},
            `type_id` = #{t.typeId, jdbcType=VARCHAR},
            `gmt_modified` = now()
        </set>
    </update>
    <update id="updateByCriteriaSelective">
        update procedure
        <set>
            <if test="t.name != null">`name` = #{t.name, jdbcType=VARCHAR},</if>
            <if test="t.content != null">`content` = #{t.content, jdbcType=VARCHAR},</if>
            <if test="t.formId != null">`form_id` = #{t.formId, jdbcType=VARCHAR},</if>
            <if test="t.typeId != null">`type_id` = #{t.typeId, jdbcType=VARCHAR},</if>
            `gmt_modified` = now()
        </set>
    </update>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from procedure where `id` = #{id, jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByCriteria">
        delete from procedure
    </delete>
    <delete id="batchDelete">
        delete from procedure where `id` in
        <foreach collection="array" item="entity" open="(" close=")" separator=",">
            #{entity.id}
        </foreach>
    </delete>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select <include refid="BaseColumns"/>from procedure where `id` = #{id, jdbcType=VARCHAR}
    </select>
    <select id="selectAll" resultMap="BaseResultMap" flushCache="true">
        select <include refid="BaseColumns"/>from procedure
    </select>
    <select id="countByCriteria" resultType="java.lang.Integer">
        select count(*) from procedure
    </select>
    <select id="selectSingleShadow" resultType="object">
        select ${columns} from procedure
    </select>
    <select id="selectMutipleShadow" resultType="map">
        select ${columns} from procedure
    </select>

    <!-- 这里是自定义方法 -->
    <resultMap id="ProcedureExtMap" type="com.oa.procedure.entity.ProcedureExt" extends="BaseResultMap">
        <result column="f_name" property="formName"/>
        <result column="p_name" property="typeName"/>
        <result column="node" property="node"/>
        <collection property="nodeList" ofType="com.oa.procedure.entity.Node">
            <id column="n_id" jdbcType="VARCHAR" property="id" />
            <result column="n_name" jdbcType="VARCHAR" property="name" />
            <result column="order" jdbcType="TINYINT" property="order" />
            <result column="flow_number" jdbcType="VARCHAR" property="flowNumber" />
            <result column="controls" jdbcType="VARCHAR" property="controls" />
            <result column="handlers" jdbcType="VARCHAR" property="handlers" />
            <result column="branch" jdbcType="VARCHAR" property="branch" />
        </collection>
    </resultMap>

    <!-- 分页增强 -->
    <select id="selectExtPage" resultMap="ProcedureExtMap">
        select p1.*, f.name f_name, p2.name p_name
        from `procedure` p1 left join form f on p1.form_id = f.id
        left join procedure_type p2 on p1.type_id = p2.id
    </select>

    <select id="selectWithNode" parameterType="map" resultMap="ProcedureExtMap">
        select p.*, n.id n_id, n.name n_name, n.order `order`, n.flow_number flow_number, n.controls controls,
        n.handlers handlers, n.branch branch from `procedure` p left join procedure_node n on p.id = n.proc_id
        <if test="id != null">
            where p.id = #{id}
        </if>
        order by n.order
    </select>
</mapper>